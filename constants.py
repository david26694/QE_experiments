data = [
    "data/house_kaggle.csv",
    "data/stackoverflow.csv",
    "data/so2019.csv",
    "data/ks.csv",
    "data/medical_payments_sample.csv",
    "data/cauchy.csv",
]

keep = [
    [
        "MSSubClass",
        "MSZoning",
        "LotShape",
        "LandContour",
        "Utilities",
        "LotConfig",
        "Neighborhood",
        "BldgType",
        "HouseStyle",
        "YearBuilt",
        "RoofStyle",
        "RoofMatl",
        "Exterior1st",
        "Exterior2nd",
        "ExterQual",
        "MasVnrType",
        "Heating",
        "HeatingQC",
    ],
    ["Country", "Employment", "FormalEducation", "DevType", "LanguageWorkedWith"],
    ["workweekhrs", "country", "yearscode", "age"],
    ["category", "main_category", "currency", "state", "country", "usdpledged"],
    [
        "Recipient_City",
        "Recipient_State",
        "Recipient_Zip_Code",
        "Recipient_Country",
        "Physician_Primary_Type",
        "Physician_License_State_code1",
        "Submitting_Applicable_Manufacturer_or_Applicable_GPO_Name",
        "Applicable_Manufacturer_or_Applicable_GPO_Making_Payment_Country",
        "Form_of_Payment_or_Transfer_of_Value",
        "Nature_of_Payment_or_Transfer_of_Value",
    ],
    ["value_1", "value_2"],
]


drop = [
    [
        "Id",
        "BsmtQual",
        "BsmtCond",
        "BsmtExposure",
        "BsmtFinType1",
        "BsmtFinSF1",
        "BsmtFinType2",
        "BsmtFinSF2",
        "BsmtUnfSF",
        "LowQualFinSF",
        "FullBath",
        "HalfBath",
    ],
    ["Respondent", "Salary"],
    [],
    [],
    [],
    [],
]

cols_enc = [
    [
        "MSSubClass",
        "MSZoning",
        "LotShape",
        "LandContour",
        "Utilities",
        "LotConfig",
        "Neighborhood",
        "BldgType",
        "HouseStyle",
        "YearBuilt",
        "RoofStyle",
        "RoofMatl",
        "Exterior1st",
        "Exterior2nd",
        "ExterQual",
        "MasVnrType",
        "Heating",
        "HeatingQC",
    ],
    ["Country", "Employment", "FormalEducation", "DevType", "LanguageWorkedWith"],
    ["country"],
    ["category", "main_category", "currency", "state", "country"],
    [
        "Recipient_City",
        "Recipient_State",
        "Recipient_Zip_Code",
        "Recipient_Country",
        "Physician_Primary_Type",
        "Physician_License_State_code1",
        "Submitting_Applicable_Manufacturer_or_Applicable_GPO_Name",
        "Applicable_Manufacturer_or_Applicable_GPO_Making_Payment_Country",
        "Form_of_Payment_or_Transfer_of_Value",
        "Nature_of_Payment_or_Transfer_of_Value",
    ],
    ["value_1", "value_2"],
]

target = [
    ["SalePrice"],
    ["ConvertedSalary"],
    ["convertedcomp"],
    ["goal"],
    ["Total_Amount_of_Payment_USDollars"],
    ["target"],
]

columns = [
    "NameDataset",
    # Scores
    "enet_te_train_mae",
    "enet_te_test_mae",
    "enet_te_train_mse",
    "enet_te_test_mse",
    "enet_pe_train_mae",
    "enet_pe_test_mae",
    "enet_pe_train_mse",
    "enet_pe_test_mse",
    "xgb_te_train_mae",
    "xgb_te_test_mae",
    "xgb_te_train_mse",
    "xgb_te_test_mse",
    "xgb_pe_train_mae",
    "xgb_pe_test_mae",
    "xgb_pe_train_mse",
    "xgb_pe_test_mse",
    "size",
    # Params
    "enet_te_best_params",
    "enet_pe_best_params",
    # Time
    "time_train_m",
]
